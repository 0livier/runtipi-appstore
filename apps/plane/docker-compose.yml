version: "3.7"

services:
  plane:
    container_name: plane
    image: nginx:1.21-alpine
    ports:
      - ${APP_PORT}:80
    volumes:
      - ${APP_DATA_DIR}/data/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - vikunja-api
      - vikunja-frontend
    restart: unless-stopped
    networks:
      - tipi_main_network
    labels:
      traefik.enable: ${APP_EXPOSED}
      traefik.http.routers.plane.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.plane.entrypoints: websecure
      traefik.http.routers.plane.service: plane
      traefik.http.routers.plane.tls.certresolver: myresolver
      traefik.http.services.plane.loadbalancer.server.port: 80

  redis-db:
    image: postgres:15.2-alpine
    container_name: redis-db
    restart: always
    volumes:
      - ${APP_DATA_DIR}/data/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: tipi
      POSTGRES_DB: plane
      POSTGRES_PASSWORD: ${PLANE_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    command: postgres -c 'max_connections=1000'
    ports:
      - 5432:5432
    networks:
      - tipi_main_network
  
  plane-redis:
    image: redis:6.2.7-alpine
    container_name: plane-redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ${APP_DATA_DIR}/data/redisdata:/data
    networks:
      - tipi_main_network
  
  plane-web:
    container_name: plane-web
    image: makeplane/plane-frontend:0.6
    restart: always
    command: [ "/usr/local/bin/start.sh" ]
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${APP_PROTOCOL:-http}://${APP_DOMAIN}
      NEXT_PUBLIC_GOOGLE_CLIENTID: 0
      NEXT_PUBLIC_GITHUB_APP_NAME: 0
      NEXT_PUBLIC_GITHUB_ID: 0
      NEXT_PUBLIC_SENTRY_DSN: 0
      NEXT_PUBLIC_ENABLE_OAUTH: 0
      NEXT_PUBLIC_ENABLE_SENTRY: 0
    ports:
      - 3000:3000
    networks:
      - tipi_main_network
  
  plane-api:
    container_name: plane-api
    image: makeplane/plane-backend:0.6
    restart: always
    ports:
      - 8000:8000
    environment:
      DJANGO_SETTINGS_MODULE: plane.settings.production
      DATABASE_URL: postgres://tipi:${PLANE_DB_PASSWORD}@plane-db:5432/plane
      REDIS_URL: redis://plane-redis:6379/
      EMAIL_HOST: ${PLANE_EMAIL_HOST}
      EMAIL_HOST_USER: ${PLANE_EMAIL_HOST_USER"}
      EMAIL_HOST_PASSWORD: ${PLANE_EMAIL_HOST_PASSWORD}
      AWS_REGION: ${PLANE_AWS_REGION}
      AWS_ACCESS_KEY_ID: ${PLANE_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${PLANE_AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: ${PLANE_AWS_S3_ENDPOINT_URL}
      AWS_S3_BUCKET_NAME: ${PLANE_AWS_S3_BUCKET_NAME}
      WEB_URL: localhost/
      GITHUB_CLIENT_SECRET: ${PLANE_GITHUB_CLIENT_SECRET}
      DISABLE_COLLECTSTATIC: 1
      DOCKERIZED: 1
      OPENAI_API_KEY: ${PLANE_OPENAI_API_KEY}
      GPT_ENGINE: ${PLANE_GPT_ENGINE}
      SECRET_KEY: ${PLANE_SECRET_KEY}
    depends_on:
      - plane-db
      - plane-redis
    command: ./bin/takeoff
    links:
      - plane-db:plane-db
      - plane-redis:plane-redis
    networks:
      - tipi_main_network

  plane-worker:
    container_name: plane-worker
    image: makeplane/plane-worker:0.6
    depends_on:
      - plane-redis
      - plane-db
      - plane-api
    command: ./bin/worker
    links:
      - plane-redis:plane-redis
      - plane-db:plane-db
    environment:
      DJANGO_SETTINGS_MODULE: plane.settings.production
      DATABASE_URL: postgres://tipi:${PLANE_DB_PASSWORD}@plane-db:5432/plane
      REDIS_URL: redis://plane-redis:6379/
      EMAIL_HOST: ${PLANE_EMAIL_HOST}
      EMAIL_HOST_USER: ${PLANE_EMAIL_HOST_USER"}
      EMAIL_HOST_PASSWORD: ${PLANE_EMAIL_HOST_PASSWORD}
      AWS_REGION: ${PLANE_AWS_REGION}
      AWS_ACCESS_KEY_ID: ${PLANE_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${PLANE_AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: ${PLANE_AWS_S3_ENDPOINT_URL}
      AWS_S3_BUCKET_NAME: ${PLANE_AWS_S3_BUCKET_NAME}
      WEB_URL: localhost/
      GITHUB_CLIENT_SECRET: ${PLANE_GITHUB_CLIENT_SECRET}
      DISABLE_COLLECTSTATIC: 1
      DOCKERIZED: 1
      OPENAI_API_KEY: ${PLANE_OPENAI_API_KEY}
      GPT_ENGINE: ${PLANE_GPT_ENGINE}
      SECRET_KEY: ${PLANE_SECRET_KEY}
    networks:
      - tipi_main_network
